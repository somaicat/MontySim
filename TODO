There are potential problems with the killtime (and stoptime) variables being used for thread syncronization. As it stands it should work on most systems, but really at the very least they should probably be switched out for some sort of atomic primitive. I think C11 has something for this.
Look into switching out pthreads with c11 thread support.

Add argument for total number of games allowed to play.?
Solve the bias in +1billion runs of the simulation. If it's too ineffecient to do so, perhaps provide an option of PRNG algorithms to use
Currently, if we ctrl+c while a game delay is set, we don't actually stop the program until the delay is up. If the delay is long, this might be frustrating. The problem is that only one thread (main thread probably) gets SIGINT, the other threads ignore it so nanosleep() isn't interrupted. Should try and fix this at some stage. 
There's a segfault caused by ncurses resizing the windows when wrefresh is called if the terminal is made too small. I think it's due to how it resizes the windows rather than recreating them. Something to keep in mind and see if I can find a way to fix it properly
